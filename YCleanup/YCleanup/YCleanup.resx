<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAgIAAAAEAIAAHGQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAACAAAAAgAgGAAAAwz5hywAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAYnElEQVR4Xu2deVSU
        V5qHu2empycz053YaRPT0RgT4xLjFuICbqDiiiwKirLvFJugKJtwVFBQ0Whr2g0RRFmEYt+LfUdkF0Rw
        wyVJR5N4TmZO/vDM+c29X/GVBVxIFatYXzzP+U69YiH1e+573/sVwd+R/34voNIwiwKqA7MooDowiwKq
        A7MooDowiwKqA7MooDowiwKqA7MooDowiwKqA7MooDowiwKqA7MooDowiwKqA7MooDowiwKqA7MooDow
        iwKqA7MooDowiwKqA7MooDowiwKqA7MooDowiwKqA7MooDowiwKqA7MooDowiwKqA7MooDowiwKqA7Mo
        oDowiwqTHKb7pyKxg0G52CmIkFCZ5FxUmSi6XZXs/KAy0ammMsmpqIuIigRRSLnY3io3xmYm67kERgVm
        8TeRxFvPr0hyia9Kcn5ZleKCquTeVHM4dydJSqVY1FGa4OBTem3HONbzC4wYzGK/lCQ5u0qDd0UvekjA
        00uELhkqxU7PSsW2BqzPIzAiMIt9UpvhYVWV4kbClochAoUhAoUlQ5nYwYP1+QSGHWaRSXGW+wf1OZ6/
        VKa6gUNRERTZIhJFL8sS7LRYn1dgWGEWmdwq9ApqLfRGVZo7EWBnF0MlgzO5Ov9SFGu/ifW5BYYNZpEJ
        CT+vrdgHt4sDUJvjg0qWCMrIwBCBUp3olFREhkzW34HF+fNqf6AfX0U6SFGctTo9mbA+ToAJs8jkdqF3
        ERWA0l62H+0VR9FSegR1kgBUZ3j2loGE310GhgQ8DBEqkpwqixMc9/QlQ1GcvXpVkuNJOkhWJzmRoZIi
        QlWi6NdqsWNSSZydWcklw/GsPysgg1lk0lK49wwvwCt80V5+EHerQtBRdQx3Ko6grSwEt4qC0JR/APW5
        /qjN9kFNpjdupO9FddpuVKd6EHayRehji6hMdvmFnDxKufsJyU6xlYnOHfyR8lX4PRGhWuzwskrsKCmL
        s7UTZGDCLDJpyNu9qbcAvbld5I1beZ5oyNqJmlRnVCTaozjWGvlXzZFz2QQZYduRdoFwcQcyw02Rd9Ua
        5YlOvWVgiECRDY7y9CsCRZChD5jFPiHhVrJCl6ebAGlUAAcUx1kjL8oMWeEk+POGEJ/WQ+zxjbgSsgZh
        +7XwD5+lOO+viciQDShNcBxGGYgIggzyMIt9ciNbNKm12OcxK3gZvQQgHYATwBzZ/Qhwao8GrhzZSLoB
        ORH0FEBGXyIIMgwQZrFf6P2A1iLveGb4HFIB6rsEqJQJYMYUIPaELjIvW6A82VW5U0Q/R0q2CBSWCBSV
        lYFZVIiGHJcpt/L3+rcW+RS2Fnv93FOAhiz3bgLkMwQQnzFAo8RL7gQxxEfKPmVgScCjUjIwiwOiJNNq
        PJWiOc9D62aOh0F1iquoKlUUUiq2iy2KtaqRRJn83E2AExuRfHYLEcYXbSX+aC7ww82svXIiyMlAwh/M
        kZKivAxSEW5Q3lwZmMVh49KpdePj/6G3LP6Ejkfs8Q1pSd9s+fVV5yBHyrIA3CkLRHPRgX5lUKgrKDMv
        KLhFvIEyMIsjRnPRHq1XAshR4ouOikDcqaD3FAJRk7lncDL0kICnlwgyGVgS8MjJkDDmZWAWR4wGya75
        TAHkuFOyD3crD6O98hjpDEG4odBdx5GQoWtWGNsyMIsjBp0ZWKH3xZ1Sf9ytOkJkCEVTYSCq03czZVBI
        hGE4UnIiJHbJkCBKK4mxM3vN35tgFkcMZQWQh84L96pDiQwn0FhwEFXpHsMgQw8JZCJQWCJQustQLRb9
        Wh3vmPSaysAsjhj05HC72OslK2BloO9H3Kv5Gm0Vx9GQvx9VabwMXSIoIwNDBErfMrAk4HntZWAWR5Qm
        iad6a6FXWGux9zNWuMrSURGE+zUniQyhqJf4k/D5t61fidBdBoYEPAwRKMrL0GOLkMngwMkQd3zxW6zX
        ZgRgFkcF+r7+uZDNyQnnTFGXvYsZrnL4csPjvRsncbv8GOpy/bpEGMotgiGDklsE5XLwxjTWazICMIuj
        hr/rigjRjnlwMJ6H4L3aSLpojub8vYxwleNOiR8ZHoM5GVrLjuJmtvfAZeghAU8vEWQysCTgEUESYYJd
        JtMesF6PEYBZHDWyIswjLgStxSGPZfC0WQjH7fPgbKqGo95rkHzJEk15e5gBK4NUhhDcrT6JlpJg1GTy
        N5xeiTDcW0TZdTskndbDWe8FOOzwGWx0PhQEoDRlu0RIIrch9fxmxP1dH2cPrkGQx3J4WC2AyORL0hnm
        ItRvHRIvmA1NZyjdx8nQXnUct4oPyd1jULIrKLBFVJJWn3FhKy7tX4pjzjNwRDSNI5gKoDtREIDSXugR
        UXHdFKWxJiiJMQWVIT1sK64c24Czgevg57gIHtYLYbd1DlzNF+AI2SZSwq2GpjNw9xhCcKf8KJoKDhAZ
        +HsMg5MhJ8IUkYe1cGLnF7LQ5Ql2mCYIwHO31D2oOsEcVQlmZDiyRGW8GSrJ49zLhsiP2oH407qIOamP
        416a2O+2DE4m8+FEtgg7o9k4vm8DxEPWGaQytJUdRkOeP6q5ewxdIiggQ95VS8QcW4uTHnOYocsT7DgN
        tvqCABwPSj32V4stUE0EuJlshfI4E+5aEr2dTM1WKLy6jeyf5ki/sJl0hm24eGgNTgesxW4rNey0Wgjr
        LV9gp+UiBO9ZhdQh7AwdFYfQWhpIjpW+Xd8W/0oEXoaiWDvEfb0R3+xVYwbdF1QAe0EAKVSAG4lEALE5
        F3xZzHbUplijPHY76lJtUBa7A3UpNpwQ1YlWZE/VR8E1U1wNXY+rX+sj0E0Dfs7LyBYxGy5ki7AxnIWv
        /TdCfH7oZob28gNELF9UJruhMM4OmeEmuBiwlBmuIlABHAwm1bNejxGAWRw1eAHK43ZwwZd1BV9Ogq9P
        s0UF6QgN6bacGA3pdiiINERtqi1ywregPN4KiWd0kXpxG874r8RxX20475gDN9IRLDd/TmaHxTjsSTrD
        ZWs05w1OhibJbhTFWEJ8ehMu+qt3G+qUwmHayxCHqRKRwcQFrNdjBGAWRw0qQE2SJUqjjWUrv54IUEGE
        aOgSoJEEXxRlhMYMexRd3YqmTHKN2so9zo80Qk2KLZLO6CD/mhkuHVqNiFA9+NovgLfjErJFzIKbxSLY
        kOvJAB3SGUwH1BmaZQLoDEgAP4tPYL3xQyyf/efRav08zOKowQtQFmPMXvlEiMYMqQA0+GIiQHOWA0qu
        bSNXR9k195IBGjIckH5eDxVia8ScWI+kC9sQumcZNx/YGRERLBfDXH8Gdtlo4PDulci+aoeWAi9m4D1p
        lnhyAiQq0QECbafCQW8idJeMh8bnf8ZqtXehveD9Z3fu3FvGei1GCGZx1KAC8Ht/Xyu/iax0GnxTpkOX
        ANLgb2U7Iu+yAVpyROS6mVyduGtztgjZRIjaVHsknNpAJnRz/GPfClwM1sUui3nYY78EFvozyRC5mJsd
        vgnUQ9plq35laM6TEyCgbwHoEW+n0WRs1XofK+aOw7LZb2Pdwnehs/gvsNWZCCfD2eh8/C0edD59/ODh
        o5OjIAOzOGo8KN39SgAFVz4NvjR6G1pI0NLgRciP2IzWXCcyI2whV2eyNRhy18zzm9CYKULymY2kM9gg
        MkQbCWe3keFxMQI9VsKWDI10eORmBht1MkesRdYV214yUAGKY+nM0SWAy8xuwfuYfYLtqydgzVd/IaG/
        g1VfjoOuxl9hrPUenPQmwX7jB/A1/RSeZEahAsgzwjIwi6PGvUJ3D374G9DK7wo+nwYvkQpwO88ZknB9
        cnVBTpged80m1xYiRMZ5XdSmOeD6yQ3IijTBaT9NnNy3Bm5m80hHWAQrIoKrxULuDuSZQF2kR1jhFpkZ
        Xgmgi7AADYQSAfZbf8q1+NVq46A1/y9kf38HOurjYbRiPGw2/A0uBpPgZjARviZT4L55Ig5afQZ3w497
        CSDPCMjALI4a9+rE2g25fqhJ8xz0yr8tcUbBFUNZ8G15rmQ20MOdfHrVl17DDbh6dpg+bpLhMeWsLgqi
        zRERsgZXjusjwGkxfEVLyXHyCziZqMGaXOn9hqNe2ji2VxOH3TXIGf4TGGl9gMUz/gTtr96F1tx3YLxy
        AkxWvQfXrtA9t06G946PsWfrR9hv8Sl2GU5EkM00ePyGAPIMkwzM4ojS0tLy2d37D/0fdj6tf9D5BHfv
        d+L27VbUF5xAacoBbrofzMpv6xJAFnyBK6kboL3AjROH/j798/R5JeQxHR6zwgy44fH6qY1IuWiMkz6a
        OLRbEy4m8+Bs9hUnxJZVH0FXczIXvI7Ge1ij9g63r1tovw9P4ymy1b5322T4kvD3mX4CL+OPcMByKjyN
        JuEQEUC08X1m2L/FEMrALA478qH3/OIePnpKvsAnuNV6BzW1DagoFCMvPRwNmc4ovLpjUCufCkEFoOJQ
        Aeifo89HxaHPQ+8r3CLDI73S4VESYYiKBAukndNH1mVjXA5ei3NB6+HjuAjb1n4Mi02fQU/9XTLoTYHV
        mvewz3wqXPX+Rla5NGR/80/gs/1j+JkQAchc4GU8mRPAVe8DHLIduADy8DK0t7cr/DMV5GAWh4X+Qu8L
        KkNrWzvqG5tRXFqGzKxslKcHITPKdUhWfn7EFhI4DV4qQCERhz4f3XKk163kOGqLQvK4Jtmau+FUGG2G
        63/fhCCn+QhxWwC7DRMQaDMdzrrSUD22TESg9Weydu9DVr+f6RT4EwHo7x20kgpwmHysk87gBaA8esK9
        Vi/v3Xug7M9aYhaHjIGE3hf3HjzC7Tt3UVpWiawcCbJTLyMp+gQas3YiL9JoUCu/V/Bkq6EzSDHZaugQ
        WnLNmLvSx3VkOC24Qt/W1cA5v6VwISv+qOMMuOn/DcF207GrS4C926QC+O6YwslAu4HH5g+lAuh/gGBO
        gAnMr1URaOiUzsdPSfhPcP/hI7Tfvf/yRkODMp2AWRwUQxk6C9oV7j98jIbGW6i6cRMSSS5SU5NQlh5C
        pnQn0glcB7fySSehswa91UxnDTqE0juT9BRCj6d0GKXXa4eXEwlWkL3+QxwTzcROIkCI/XTs5gY8KsBk
        bvXTOWDP1kkIoAJsIQJYT5XJ4rxJOQFYoZPXGu0d98ni6EBLaxvqGpr8Wbn0AbOoNMMden9wQ2NbB8or
        b5DOkIectAgkXzuMuqy90q0gnwY/gJVPgi8hwdMhtDSGCECDJ6cS7hZ13A7EhCxH+EFN7CSrmhPAgBdg
        Etnvp3D7vXT/JwKQbhBgTqb/ru7gRj5WUQEUCb2puYXbJmvrGlBdU7uflVEfMIsKMZqhs5DvDBVVN5Ar
        yUFqSgJKM44hO9IatyQ7B7Xym8kphN6a5t+mjjmyApcDtYgAExHqNBPupBMcsPwUu8nwxw98/P7Pbwf0
        +EcF4GXxtZjH/Fp6hU62v/5Cv1FTi8qqGpRVVJFZqXz4BHjdQu+PjnsPyQDZgcrqm8gmnSGXdIa0aPr/
        GXoPauVTASqumyD26ApEEAHcyaqmA5076QT8EY8OfN7bewuw22gytz0c2WuEzOQo1NXVyP6+zNDJ16BI
        6CWl5SgsLkF+QREk+flDJ0BZWdmfnj17Jnr+/HnIo6ffvfahs6CdgQ6QjU0t3IuVnZOD5IRw5KeeQF6U
        Jeqz3JRa+bWcAKa4emgJIoK0yL4+SSYAHfA8yX5PBz4qgC89/hEBfC3n4rDTQlw6HYicnCzUNzRzgtKw
        ZaGTo++AQ88rIB0vj3xtEmRl5QydAC9evChNTEzElStXUFtbix9//An//OE5Hj/9vtuLPJbouPeAvKC3
        UEJOExlZOchKjUJmbACq0n0UWvn0cWW8KRkClyLy0Ep4kD2fCsANeEQAfuCjAhzauRYn/YyQkhhLZpRq
        EupdTkbp32UIQ8/OQUZmNtIzspCWljE0AnR0dExqbm6GjY2NDFNTU3h5eSEvLw/Pn/84pmWgnYGuwqbm
        VpSWVyInl5wmxGHITT6Fohgr1Ka7MFd+HSeAGaKDl+IKEWCX4UfcQMed8bnz/yScPuSEsK+9UFhUREJs
        5GYT6ecdYOhFvxF6egZS09KRkpqGpJSUoRHgu+++m1JfX99NgE2bNmHGjBkcixcvfmNkoFAZ6khrLiuv
        QmY2eYHTY5Eb54vSZJ9uK78u1Zr7ptXo4GWIOrwKu4yIAPYz4W02C9ERp5Eivoaa2no0t9wmz/uUY7hD
        T05JRVIyJQVicdLICCDPmyQD3xnorejC4lJkZpEXO1HaGSriLXAjRcQJEHtsNaJCtyLU2xDp6ekoIq25
        jbR4eiwd6dATk5IhTpQSP5wC6OrqYubMmb3oT4Yfnj3Hk2/Htgy19U0or6hGjiQfkpxklKQGIivxGzJH
        VHC/d+9BJx6QNj8yoaf0Cl2cmIQEsZT4ePHwCGBra8sJ8PnnnzMlYCEvAx0g3wQZ6CBXW9/IvUfRSWr0
        jatXod/jQr81wqEniBMRn9DFcAhAw6fo6elxArBgCSAPL0N+fv6YlEH+nP6g8/HrFTqHWIpUgH/pmWcf
        MIscvAB8+HZ2dtDX18esWbO6wZKBhyUCRV1dfUzI0O3mzG+s9JujGboc0dGxB0l+fyD8G+FfCf3JwCxy
        yAtAw+cF+OKLL2T0lIGHJQPP6y7DWAxdHiJAEMmP/sCJ/yD8kdCfDN0edIMXgAZvb28PBwcHbN68GbNn
        z5YhL8NgpKCMpgxjPXR5IiOjDpP86I+f+S/CfxLkZfh3Ai8Dzbl38Dy8ADR4R0dHiEQiGBoaYs6cOd2Q
        F6IvMVhCUFgi8Ay3DAqH3tDUI/RK+oZLt9BzRjl0eYgAISS/dwhvE/5MoDL8N4HKQEWgAvCdoHfwPFSA
        hoYGLnwnJyc4OzvDyMgI8+bN45g7d66MgUihjBhUBm9v70HL0Ffod8Z46PJcuhR+lOT3V8K7BPrvMlIJ
        aPB0K1BuC6AC0OBdXFzg5uYGY2NjzJ8/XwYvgyJSsMQYiBQaGhpKyaAKoctz/vzFQJIfFYCuetr2+XbP
        glnkoAI0NjZywbu7u2PXrl3cewFqamocX375pQxFpWCJMRgpesrw/T+fDS708rEZ+vV4MeLi4v/n2rXo
        y9u3b6fh9xe6PMwiBxWgqamJC97T05N7oS0tLbFgwQJ89dVXMnghRluKZcuWkTNwPJ4TEVQm9HjxLzHx
        8VejouIMyOKkQx8zy35gFjmoAPTdQDqI+fr6Yv/+/dxpYOHChTKoDDzKStFTjKGSIiUlBZ2PnvQZOv1u
        oTci9Lg4g+PHjw/25wsyixxUgJaWFgQEBCAwMBAhISHw8/PjBjJ6V4+yaNEiGa+DFBR6Uvn++38KoSsG
        s8hBBWhtbUVwcDBCQ0Nx+vRpMmCc5wbC5cuXc/svlYGnPynkxRisFD3F6CkFfV4qwJgP/XrCr8MUujzM
        ooxn5L+zZ8/i3LlzCAsLI0eMSxwXLlzgOoO5uTlWrFiBJUuWcEIMpxScGGrzMUt7FqZtn4YZujMwW2M2
        U4pvv/1uzIYedz0+KSYmxoy83iPxs4SZRRkk/z10EAwPD5eF3xN5GTQ1NbF06VJOCHkp5MXgpZAXgyUF
        S4y5WnPxsdfHGHd7HMbljsN0k+mYu3hur07x9OlTIXTFYBa78eLFi2P379/n3tKNjIxkSsDDy2BhYQEt
        LS1uMqdCDJUUczfOxbjscTD5XxMYkl8TLkzAnDVzenWLx4+fCKErBrPYix9++GH+zz//fPKnn3563NbW
        prQMK1eu5GTg6SmFvBj9STF/43yMTxqP9S/Ww4D8erv0bczRke778p3i0ePHQuiKwSz2C5Fh2UBkoMdI
        eh9h1apV3BBJUVaKBdoLMN1jOt568hbe+r+3MOHKBE6Knt3i0aNHQuiKwSwqzGBksLKywurVq7khksJL
        IS8GLwUvhsYSDagZqGGmx0xMPTAVc8zmYKHmwl6dopMIIISuEMzigBioDAcOHIC1tTW0tbW5IZKnTymW
        LYW6tjoWrV8EdU31bp2C7xadnY+E0BWDWRw0g5VhzZo13BBJ6SmFvBh9dQoqgBC6QjCLQ8pgZKDfj7h2
        7VpubqCDJEURKTo7O5nBDQYaemxc/Mu4uIS0MR66PMzisDEYGei3pq1bt46bG6gQPaWQF2OoBHgVulgS
        HR1nd+rUpTft3xBmFkeEgcpw8OBBTob169dzcwMVoqcUgxFABUKXh1kccQYjA/2exQ0bNnBzAxWCoqwA
        Kha6PMziqDIQGS5evMi9Y0nfrtbR0VFIABUOXR5m8bVhoDL0JYAQei+YxdcSRWWIiIjoJoAQer8wi689
        /cmQkZGBjo67QuiKwSyOKeRloCv/xx9/7CgpKRFCVwxmUUB1YBYFVAdmUUB1YBYFVAdmUUB1YBYFVAdm
        UUB1YBYFVAdmUUB1YBYFVAdmUUB1YBYFVAdmUUB1YBYFVAdmUUB1YBYFVILf/f7/ARKEhkx4PEPBAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>